
    Test cases of the matrix_mul function

Example:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

    Testing with a 2 x 2 matrix
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    Testing with a 1 x 2 and a 2 x 2
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

    Matrix not containing integers or floats
    >>> matrix_mul([[1, 'num']], [[22, 33], [8, 9]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

    m_a and m_b can't be multiplied, this happens when the number of columns in
    m_a is not equal to the number of rows in m_b
    >>> matrix_mul([[1, 2, 3], [3, 2, 1]], [[2, 1]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied

    All row must be equal otherwise raise a TypeError
    >>> matrix_mul([[9, 7], [3, 2]], [[1], [2, 9]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

    The matrix must not be empty
    >>> matrix_mul([], [])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty