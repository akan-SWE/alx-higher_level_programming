# ./tests/101-lazy_matrix_mul.txt

    Test cases of the lazy_matrix_mul function

Example:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

    Testing with a 2 x 2 matrix
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    Testing with a 1 x 2 and a 2 x 2
    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

    Matrix not containing integers or floats
    >>> lazy_matrix_mul([[1, 'num']], [[22, 33], [8, 9]])
    Traceback (most recent call last):
        ...
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

    m_a and m_b can't be multiplied, this happens when the number of columns in
    m_a is not equal to the number of rows in m_b
    >>> lazy_matrix_mul([[1, 2, 3], [3, 2, 1]], [[2, 1]])
    Traceback (most recent call last):
        ...
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

    All row must be equal otherwise raise a TypeError
    >>> lazy_matrix_mul([[9, 7], [3, 2]], [[1], [2, 9]])
    Traceback (most recent call last):
        ...
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

    The matrix must not be empty
    >>> lazy_matrix_mul([], [])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty